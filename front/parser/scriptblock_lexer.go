// Generated from ScriptBlockLexer.g4 by ANTLR 4.7.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 41, 246,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 4,
	39, 9, 39, 4, 40, 9, 40, 3, 2, 6, 2, 83, 10, 2, 13, 2, 14, 2, 84, 3, 2,
	3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 7, 3, 93, 10, 3, 12, 3, 14, 3, 96, 11, 3,
	3, 3, 6, 3, 99, 10, 3, 13, 3, 14, 3, 100, 3, 3, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 6, 7, 6, 115, 10, 6, 12, 6, 14,
	6, 118, 11, 6, 3, 6, 6, 6, 121, 10, 6, 13, 6, 14, 6, 122, 3, 7, 6, 7, 126,
	10, 7, 13, 7, 14, 7, 127, 3, 8, 3, 8, 3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3,
	9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3,
	10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12,
	3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3,
	14, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15,
	3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3,
	19, 3, 20, 3, 20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3, 24,
	3, 25, 3, 25, 3, 26, 3, 26, 3, 27, 3, 27, 3, 28, 3, 28, 3, 29, 3, 29, 3,
	30, 3, 30, 3, 30, 3, 31, 3, 31, 3, 32, 3, 32, 3, 33, 3, 33, 3, 34, 3, 34,
	3, 35, 3, 35, 3, 36, 3, 36, 3, 37, 6, 37, 227, 10, 37, 13, 37, 14, 37,
	228, 3, 38, 3, 38, 3, 39, 6, 39, 234, 10, 39, 13, 39, 14, 39, 235, 3, 40,
	3, 40, 7, 40, 240, 10, 40, 12, 40, 14, 40, 243, 11, 40, 3, 40, 3, 40, 5,
	94, 116, 241, 2, 41, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10,
	19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19,
	37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28,
	55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 71, 37,
	73, 38, 75, 39, 77, 40, 79, 41, 3, 2, 9, 4, 2, 11, 11, 34, 34, 5, 2, 12,
	12, 15, 15, 94, 94, 4, 2, 12, 12, 15, 15, 5, 2, 67, 92, 97, 97, 99, 124,
	4, 2, 45, 45, 47, 47, 3, 2, 50, 59, 3, 2, 41, 41, 2, 254, 2, 3, 3, 2, 2,
	2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2,
	2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2,
	2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3,
	2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35,
	3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2,
	43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2,
	2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2,
	2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2,
	2, 2, 2, 67, 3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3,
	2, 2, 2, 2, 75, 3, 2, 2, 2, 2, 77, 3, 2, 2, 2, 2, 79, 3, 2, 2, 2, 3, 82,
	3, 2, 2, 2, 5, 88, 3, 2, 2, 2, 7, 104, 3, 2, 2, 2, 9, 107, 3, 2, 2, 2,
	11, 110, 3, 2, 2, 2, 13, 125, 3, 2, 2, 2, 15, 129, 3, 2, 2, 2, 17, 134,
	3, 2, 2, 2, 19, 141, 3, 2, 2, 2, 21, 149, 3, 2, 2, 2, 23, 155, 3, 2, 2,
	2, 25, 159, 3, 2, 2, 2, 27, 165, 3, 2, 2, 2, 29, 172, 3, 2, 2, 2, 31, 181,
	3, 2, 2, 2, 33, 184, 3, 2, 2, 2, 35, 186, 3, 2, 2, 2, 37, 188, 3, 2, 2,
	2, 39, 190, 3, 2, 2, 2, 41, 192, 3, 2, 2, 2, 43, 194, 3, 2, 2, 2, 45, 196,
	3, 2, 2, 2, 47, 198, 3, 2, 2, 2, 49, 200, 3, 2, 2, 2, 51, 202, 3, 2, 2,
	2, 53, 204, 3, 2, 2, 2, 55, 206, 3, 2, 2, 2, 57, 208, 3, 2, 2, 2, 59, 210,
	3, 2, 2, 2, 61, 213, 3, 2, 2, 2, 63, 215, 3, 2, 2, 2, 65, 217, 3, 2, 2,
	2, 67, 219, 3, 2, 2, 2, 69, 221, 3, 2, 2, 2, 71, 223, 3, 2, 2, 2, 73, 226,
	3, 2, 2, 2, 75, 230, 3, 2, 2, 2, 77, 233, 3, 2, 2, 2, 79, 237, 3, 2, 2,
	2, 81, 83, 9, 2, 2, 2, 82, 81, 3, 2, 2, 2, 83, 84, 3, 2, 2, 2, 84, 82,
	3, 2, 2, 2, 84, 85, 3, 2, 2, 2, 85, 86, 3, 2, 2, 2, 86, 87, 8, 2, 2, 2,
	87, 4, 3, 2, 2, 2, 88, 89, 7, 37, 2, 2, 89, 90, 7, 37, 2, 2, 90, 94, 3,
	2, 2, 2, 91, 93, 10, 3, 2, 2, 92, 91, 3, 2, 2, 2, 93, 96, 3, 2, 2, 2, 94,
	95, 3, 2, 2, 2, 94, 92, 3, 2, 2, 2, 95, 98, 3, 2, 2, 2, 96, 94, 3, 2, 2,
	2, 97, 99, 9, 4, 2, 2, 98, 97, 3, 2, 2, 2, 99, 100, 3, 2, 2, 2, 100, 98,
	3, 2, 2, 2, 100, 101, 3, 2, 2, 2, 101, 102, 3, 2, 2, 2, 102, 103, 8, 3,
	2, 2, 103, 6, 3, 2, 2, 2, 104, 105, 7, 49, 2, 2, 105, 106, 7, 44, 2, 2,
	106, 8, 3, 2, 2, 2, 107, 108, 7, 44, 2, 2, 108, 109, 7, 49, 2, 2, 109,
	10, 3, 2, 2, 2, 110, 111, 7, 44, 2, 2, 111, 112, 7, 44, 2, 2, 112, 116,
	3, 2, 2, 2, 113, 115, 10, 4, 2, 2, 114, 113, 3, 2, 2, 2, 115, 118, 3, 2,
	2, 2, 116, 117, 3, 2, 2, 2, 116, 114, 3, 2, 2, 2, 117, 120, 3, 2, 2, 2,
	118, 116, 3, 2, 2, 2, 119, 121, 9, 4, 2, 2, 120, 119, 3, 2, 2, 2, 121,
	122, 3, 2, 2, 2, 122, 120, 3, 2, 2, 2, 122, 123, 3, 2, 2, 2, 123, 12, 3,
	2, 2, 2, 124, 126, 9, 4, 2, 2, 125, 124, 3, 2, 2, 2, 126, 127, 3, 2, 2,
	2, 127, 125, 3, 2, 2, 2, 127, 128, 3, 2, 2, 2, 128, 14, 3, 2, 2, 2, 129,
	130, 7, 104, 2, 2, 130, 131, 7, 119, 2, 2, 131, 132, 7, 112, 2, 2, 132,
	133, 7, 101, 2, 2, 133, 16, 3, 2, 2, 2, 134, 135, 7, 117, 2, 2, 135, 136,
	7, 101, 2, 2, 136, 137, 7, 116, 2, 2, 137, 138, 7, 107, 2, 2, 138, 139,
	7, 114, 2, 2, 139, 140, 7, 118, 2, 2, 140, 18, 3, 2, 2, 2, 141, 142, 7,
	101, 2, 2, 142, 143, 7, 113, 2, 2, 143, 144, 7, 111, 2, 2, 144, 145, 7,
	111, 2, 2, 145, 146, 7, 99, 2, 2, 146, 147, 7, 112, 2, 2, 147, 148, 7,
	102, 2, 2, 148, 20, 3, 2, 2, 2, 149, 150, 7, 101, 2, 2, 150, 151, 7, 113,
	2, 2, 151, 152, 7, 112, 2, 2, 152, 153, 7, 117, 2, 2, 153, 154, 7, 118,
	2, 2, 154, 22, 3, 2, 2, 2, 155, 156, 7, 116, 2, 2, 156, 157, 7, 119, 2,
	2, 157, 158, 7, 112, 2, 2, 158, 24, 3, 2, 2, 2, 159, 160, 7, 102, 2, 2,
	160, 161, 7, 103, 2, 2, 161, 162, 7, 110, 2, 2, 162, 163, 7, 99, 2, 2,
	163, 164, 7, 123, 2, 2, 164, 26, 3, 2, 2, 2, 165, 166, 7, 107, 2, 2, 166,
	167, 7, 111, 2, 2, 167, 168, 7, 114, 2, 2, 168, 169, 7, 113, 2, 2, 169,
	170, 7, 116, 2, 2, 170, 171, 7, 118, 2, 2, 171, 28, 3, 2, 2, 2, 172, 173,
	7, 107, 2, 2, 173, 174, 7, 112, 2, 2, 174, 175, 7, 118, 2, 2, 175, 176,
	7, 103, 2, 2, 176, 177, 7, 116, 2, 2, 177, 178, 7, 112, 2, 2, 178, 179,
	7, 99, 2, 2, 179, 180, 7, 110, 2, 2, 180, 30, 3, 2, 2, 2, 181, 182, 7,
	47, 2, 2, 182, 183, 7, 64, 2, 2, 183, 32, 3, 2, 2, 2, 184, 185, 7, 42,
	2, 2, 185, 34, 3, 2, 2, 2, 186, 187, 7, 43, 2, 2, 187, 36, 3, 2, 2, 2,
	188, 189, 7, 125, 2, 2, 189, 38, 3, 2, 2, 2, 190, 191, 7, 127, 2, 2, 191,
	40, 3, 2, 2, 2, 192, 193, 7, 93, 2, 2, 193, 42, 3, 2, 2, 2, 194, 195, 7,
	95, 2, 2, 195, 44, 3, 2, 2, 2, 196, 197, 7, 46, 2, 2, 197, 46, 3, 2, 2,
	2, 198, 199, 7, 63, 2, 2, 199, 48, 3, 2, 2, 2, 200, 201, 7, 61, 2, 2, 201,
	50, 3, 2, 2, 2, 202, 203, 7, 60, 2, 2, 203, 52, 3, 2, 2, 2, 204, 205, 7,
	96, 2, 2, 205, 54, 3, 2, 2, 2, 206, 207, 7, 44, 2, 2, 207, 56, 3, 2, 2,
	2, 208, 209, 7, 49, 2, 2, 209, 58, 3, 2, 2, 2, 210, 211, 7, 49, 2, 2, 211,
	212, 7, 49, 2, 2, 212, 60, 3, 2, 2, 2, 213, 214, 7, 45, 2, 2, 214, 62,
	3, 2, 2, 2, 215, 216, 7, 47, 2, 2, 216, 64, 3, 2, 2, 2, 217, 218, 7, 48,
	2, 2, 218, 66, 3, 2, 2, 2, 219, 220, 7, 64, 2, 2, 220, 68, 3, 2, 2, 2,
	221, 222, 7, 62, 2, 2, 222, 70, 3, 2, 2, 2, 223, 224, 7, 37, 2, 2, 224,
	72, 3, 2, 2, 2, 225, 227, 9, 5, 2, 2, 226, 225, 3, 2, 2, 2, 227, 228, 3,
	2, 2, 2, 228, 226, 3, 2, 2, 2, 228, 229, 3, 2, 2, 2, 229, 74, 3, 2, 2,
	2, 230, 231, 9, 6, 2, 2, 231, 76, 3, 2, 2, 2, 232, 234, 9, 7, 2, 2, 233,
	232, 3, 2, 2, 2, 234, 235, 3, 2, 2, 2, 235, 233, 3, 2, 2, 2, 235, 236,
	3, 2, 2, 2, 236, 78, 3, 2, 2, 2, 237, 241, 7, 41, 2, 2, 238, 240, 10, 8,
	2, 2, 239, 238, 3, 2, 2, 2, 240, 243, 3, 2, 2, 2, 241, 242, 3, 2, 2, 2,
	241, 239, 3, 2, 2, 2, 242, 244, 3, 2, 2, 2, 243, 241, 3, 2, 2, 2, 244,
	245, 7, 41, 2, 2, 245, 80, 3, 2, 2, 2, 12, 2, 84, 94, 100, 116, 122, 127,
	228, 235, 241, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "", "'/*'", "'*/'", "", "", "'func'", "'script'", "'command'",
	"'const'", "'run'", "'delay'", "'import'", "'internal'", "'->'", "'('",
	"')'", "'{'", "'}'", "'['", "']'", "','", "'='", "';'", "':'", "'^'", "'*'",
	"'/'", "'//'", "'+'", "'-'", "'.'", "'>'", "'<'", "'#'",
}

var lexerSymbolicNames = []string{
	"", "WS", "COMMENT", "DOC_START", "DOC_END", "DOC_LINE", "NEWLINES", "FUNCTION",
	"TEMPLATE", "NATIVE", "CONSTANT", "RUN", "DELAY", "IMPORT", "INTERNAL",
	"ARROW", "OPAREN", "CPAREN", "OCURLY", "CCURLY", "OSQUARE", "CSQUARE",
	"COMMA", "EQUALS", "SEMICOLON", "COLON", "POWER", "MULTIPLY", "DIVIDE",
	"INTEGER_DIVIDE", "PLUS", "SUBTRACT", "DOT", "GREATER_THAN", "LESS_THAN",
	"POUND", "IDENTIFIER", "SIGN", "DIGITS", "STRING",
}

var lexerRuleNames = []string{
	"WS", "COMMENT", "DOC_START", "DOC_END", "DOC_LINE", "NEWLINES", "FUNCTION",
	"TEMPLATE", "NATIVE", "CONSTANT", "RUN", "DELAY", "IMPORT", "INTERNAL",
	"ARROW", "OPAREN", "CPAREN", "OCURLY", "CCURLY", "OSQUARE", "CSQUARE",
	"COMMA", "EQUALS", "SEMICOLON", "COLON", "POWER", "MULTIPLY", "DIVIDE",
	"INTEGER_DIVIDE", "PLUS", "SUBTRACT", "DOT", "GREATER_THAN", "LESS_THAN",
	"POUND", "IDENTIFIER", "SIGN", "DIGITS", "STRING",
}

type ScriptBlockLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewScriptBlockLexer(input antlr.CharStream) *ScriptBlockLexer {

	l := new(ScriptBlockLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ScriptBlockLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ScriptBlockLexer tokens.
const (
	ScriptBlockLexerWS             = 1
	ScriptBlockLexerCOMMENT        = 2
	ScriptBlockLexerDOC_START      = 3
	ScriptBlockLexerDOC_END        = 4
	ScriptBlockLexerDOC_LINE       = 5
	ScriptBlockLexerNEWLINES       = 6
	ScriptBlockLexerFUNCTION       = 7
	ScriptBlockLexerTEMPLATE       = 8
	ScriptBlockLexerNATIVE         = 9
	ScriptBlockLexerCONSTANT       = 10
	ScriptBlockLexerRUN            = 11
	ScriptBlockLexerDELAY          = 12
	ScriptBlockLexerIMPORT         = 13
	ScriptBlockLexerINTERNAL       = 14
	ScriptBlockLexerARROW          = 15
	ScriptBlockLexerOPAREN         = 16
	ScriptBlockLexerCPAREN         = 17
	ScriptBlockLexerOCURLY         = 18
	ScriptBlockLexerCCURLY         = 19
	ScriptBlockLexerOSQUARE        = 20
	ScriptBlockLexerCSQUARE        = 21
	ScriptBlockLexerCOMMA          = 22
	ScriptBlockLexerEQUALS         = 23
	ScriptBlockLexerSEMICOLON      = 24
	ScriptBlockLexerCOLON          = 25
	ScriptBlockLexerPOWER          = 26
	ScriptBlockLexerMULTIPLY       = 27
	ScriptBlockLexerDIVIDE         = 28
	ScriptBlockLexerINTEGER_DIVIDE = 29
	ScriptBlockLexerPLUS           = 30
	ScriptBlockLexerSUBTRACT       = 31
	ScriptBlockLexerDOT            = 32
	ScriptBlockLexerGREATER_THAN   = 33
	ScriptBlockLexerLESS_THAN      = 34
	ScriptBlockLexerPOUND          = 35
	ScriptBlockLexerIDENTIFIER     = 36
	ScriptBlockLexerSIGN           = 37
	ScriptBlockLexerDIGITS         = 38
	ScriptBlockLexerSTRING         = 39
)
